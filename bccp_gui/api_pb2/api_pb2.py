# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='api.proto',
  package='front_api',
  syntax='proto3',
  serialized_pb=_b('\n\tapi.proto\x12\tfront_api\"L\n\x06Runner\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x0c\n\x04\x64\x61te\x18\x04 \x01(\t\x12\n\n\x02ip\x18\x05 \x01(\t\"-\n\x07Runners\x12\"\n\x07runners\x18\x01 \x03(\x0b\x32\x11.front_api.Runner\"9\n\x0bRunnerStats\x12\x0b\n\x03\x61ll\x18\x01 \x01(\x03\x12\x0f\n\x07waiting\x18\x02 \x01(\x03\x12\x0c\n\x04\x64\x65\x61\x64\x18\x03 \x01(\x03\"\xe4\x01\n\x03Run\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x10\n\x08runnerId\x18\x03 \x01(\x03\x12\x12\n\nrunnerName\x18\x04 \x01(\t\x12\x0e\n\x06repoId\x18\x05 \x01(\x03\x12\x10\n\x08repoName\x18\x06 \x01(\t\x12\r\n\x05\x62\x61tch\x18\x07 \x01(\x03\x12\x11\n\tnamespace\x18\x08 \x01(\t\x12\x0c\n\x04logs\x18\t \x01(\t\x12\x10\n\x08\x63reation\x18\n \x01(\t\x12\x12\n\nlastUpdate\x18\x0b \x01(\t\x12\x11\n\tstartDate\x18\x0c \x01(\t\x12\x10\n\x08\x64uration\x18\r \x01(\t\"$\n\x04Runs\x12\x1c\n\x04runs\x18\x01 \x03(\x0b\x32\x0e.front_api.Run\"~\n\x08RunStats\x12\x0b\n\x03\x61ll\x18\x01 \x01(\x03\x12\x0f\n\x07waiting\x18\x02 \x01(\x03\x12\x0f\n\x07running\x18\x03 \x01(\x03\x12\x10\n\x08\x63\x61nceled\x18\x04 \x01(\x03\x12\x10\n\x08\x66inished\x18\x05 \x01(\x03\x12\x0e\n\x06\x66\x61iled\x18\x06 \x01(\x03\x12\x0f\n\x07timeout\x18\x07 \x01(\x03\"q\n\x05\x42\x61tch\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tnamespace\x18\x02 \x01(\t\x12\x12\n\ninitScript\x18\x03 \x01(\t\x12\x12\n\nupdateTime\x18\x04 \x01(\x03\x12\x0f\n\x07timeout\x18\x05 \x01(\x03\x12\x10\n\x08\x63reation\x18\x06 \x01(\t\"*\n\x06\x42\x61tchs\x12 \n\x06\x62\x61tchs\x18\x01 \x03(\x0b\x32\x10.front_api.Batch\")\n\nBatchStats\x12\x0b\n\x03\x61ll\x18\x01 \x01(\x03\x12\x0e\n\x06\x61\x63tive\x18\x02 \x01(\x03\"9\n\tNamespace\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1e\n\x05repos\x18\x02 \x03(\x0b\x32\x0f.front_api.Repo\"6\n\nNamespaces\x12(\n\nnamespaces\x18\x01 \x03(\x0b\x32\x14.front_api.Namespace\"@\n\x04Repo\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tnamespace\x18\x02 \x01(\t\x12\x0c\n\x04repo\x18\x03 \x01(\t\x12\x0b\n\x03ssh\x18\x04 \x01(\t\"\'\n\x05Repos\x12\x1e\n\x05repos\x18\x01 \x03(\x0b\x32\x0f.front_api.Repo\"\x8c\x01\n\x08\x43riteria\x12\x31\n\x07\x66ilters\x18\x01 \x03(\x0b\x32 .front_api.Criteria.FiltersEntry\x12\r\n\x05limit\x18\x02 \x01(\x03\x12\x0e\n\x06offset\x18\x03 \x01(\x03\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xf9\x07\n\x03\x41pi\x12\x35\n\nRunnerList\x12\x13.front_api.Criteria\x1a\x12.front_api.Runners\x12\x39\n\nRunnerStat\x12\x13.front_api.Criteria\x1a\x16.front_api.RunnerStats\x12\x31\n\tRunnerGet\x12\x11.front_api.Runner\x1a\x11.front_api.Runner\x12\x32\n\nRunnerKill\x12\x11.front_api.Runner\x1a\x11.front_api.Runner\x12/\n\x07RunList\x12\x13.front_api.Criteria\x1a\x0f.front_api.Runs\x12\x33\n\x07RunStat\x12\x13.front_api.Criteria\x1a\x13.front_api.RunStats\x12(\n\x06RunGet\x12\x0e.front_api.Run\x1a\x0e.front_api.Run\x12*\n\x08RunStart\x12\x0e.front_api.Run\x1a\x0e.front_api.Run\x12+\n\tRunCancel\x12\x0e.front_api.Run\x1a\x0e.front_api.Run\x12\x33\n\tBatchList\x12\x13.front_api.Criteria\x1a\x11.front_api.Batchs\x12\x39\n\x0f\x42\x61tchListActive\x12\x13.front_api.Criteria\x1a\x11.front_api.Batchs\x12.\n\x08\x42\x61tchGet\x12\x10.front_api.Batch\x1a\x10.front_api.Batch\x12.\n\x08\x42\x61tchAdd\x12\x10.front_api.Batch\x1a\x10.front_api.Batch\x12/\n\nBatchStart\x12\x10.front_api.Batch\x1a\x0f.front_api.Runs\x12\x37\n\tBatchStat\x12\x13.front_api.Criteria\x1a\x15.front_api.BatchStats\x12;\n\rNamespaceList\x12\x13.front_api.Criteria\x1a\x15.front_api.Namespaces\x12:\n\x0cNamespaceGet\x12\x14.front_api.Namespace\x1a\x14.front_api.Namespace\x12=\n\x0fNamespaceCreate\x12\x14.front_api.Namespace\x1a\x14.front_api.Namespace\x12>\n\x10NamespaceAddRepo\x12\x14.front_api.Namespace\x1a\x14.front_api.Namespaceb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RUNNER = _descriptor.Descriptor(
  name='Runner',
  full_name='front_api.Runner',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='front_api.Runner.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='front_api.Runner.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='front_api.Runner.status', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date', full_name='front_api.Runner.date', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='front_api.Runner.ip', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=100,
)


_RUNNERS = _descriptor.Descriptor(
  name='Runners',
  full_name='front_api.Runners',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='runners', full_name='front_api.Runners.runners', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=147,
)


_RUNNERSTATS = _descriptor.Descriptor(
  name='RunnerStats',
  full_name='front_api.RunnerStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='all', full_name='front_api.RunnerStats.all', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='waiting', full_name='front_api.RunnerStats.waiting', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dead', full_name='front_api.RunnerStats.dead', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=206,
)


_RUN = _descriptor.Descriptor(
  name='Run',
  full_name='front_api.Run',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='front_api.Run.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='front_api.Run.status', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runnerId', full_name='front_api.Run.runnerId', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runnerName', full_name='front_api.Run.runnerName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repoId', full_name='front_api.Run.repoId', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repoName', full_name='front_api.Run.repoName', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch', full_name='front_api.Run.batch', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='front_api.Run.namespace', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logs', full_name='front_api.Run.logs', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='creation', full_name='front_api.Run.creation', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastUpdate', full_name='front_api.Run.lastUpdate', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='startDate', full_name='front_api.Run.startDate', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='front_api.Run.duration', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=209,
  serialized_end=437,
)


_RUNS = _descriptor.Descriptor(
  name='Runs',
  full_name='front_api.Runs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='runs', full_name='front_api.Runs.runs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=439,
  serialized_end=475,
)


_RUNSTATS = _descriptor.Descriptor(
  name='RunStats',
  full_name='front_api.RunStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='all', full_name='front_api.RunStats.all', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='waiting', full_name='front_api.RunStats.waiting', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='running', full_name='front_api.RunStats.running', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='canceled', full_name='front_api.RunStats.canceled', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finished', full_name='front_api.RunStats.finished', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failed', full_name='front_api.RunStats.failed', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='front_api.RunStats.timeout', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=603,
)


_BATCH = _descriptor.Descriptor(
  name='Batch',
  full_name='front_api.Batch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='front_api.Batch.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='front_api.Batch.namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='initScript', full_name='front_api.Batch.initScript', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='updateTime', full_name='front_api.Batch.updateTime', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='front_api.Batch.timeout', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='creation', full_name='front_api.Batch.creation', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=718,
)


_BATCHS = _descriptor.Descriptor(
  name='Batchs',
  full_name='front_api.Batchs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batchs', full_name='front_api.Batchs.batchs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=720,
  serialized_end=762,
)


_BATCHSTATS = _descriptor.Descriptor(
  name='BatchStats',
  full_name='front_api.BatchStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='all', full_name='front_api.BatchStats.all', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='active', full_name='front_api.BatchStats.active', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=805,
)


_NAMESPACE = _descriptor.Descriptor(
  name='Namespace',
  full_name='front_api.Namespace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='front_api.Namespace.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repos', full_name='front_api.Namespace.repos', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=807,
  serialized_end=864,
)


_NAMESPACES = _descriptor.Descriptor(
  name='Namespaces',
  full_name='front_api.Namespaces',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespaces', full_name='front_api.Namespaces.namespaces', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=866,
  serialized_end=920,
)


_REPO = _descriptor.Descriptor(
  name='Repo',
  full_name='front_api.Repo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='front_api.Repo.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='front_api.Repo.namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repo', full_name='front_api.Repo.repo', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ssh', full_name='front_api.Repo.ssh', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=922,
  serialized_end=986,
)


_REPOS = _descriptor.Descriptor(
  name='Repos',
  full_name='front_api.Repos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repos', full_name='front_api.Repos.repos', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=988,
  serialized_end=1027,
)


_CRITERIA_FILTERSENTRY = _descriptor.Descriptor(
  name='FiltersEntry',
  full_name='front_api.Criteria.FiltersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='front_api.Criteria.FiltersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='front_api.Criteria.FiltersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1124,
  serialized_end=1170,
)

_CRITERIA = _descriptor.Descriptor(
  name='Criteria',
  full_name='front_api.Criteria',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filters', full_name='front_api.Criteria.filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit', full_name='front_api.Criteria.limit', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='front_api.Criteria.offset', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRITERIA_FILTERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1030,
  serialized_end=1170,
)

_RUNNERS.fields_by_name['runners'].message_type = _RUNNER
_RUNS.fields_by_name['runs'].message_type = _RUN
_BATCHS.fields_by_name['batchs'].message_type = _BATCH
_NAMESPACE.fields_by_name['repos'].message_type = _REPO
_NAMESPACES.fields_by_name['namespaces'].message_type = _NAMESPACE
_REPOS.fields_by_name['repos'].message_type = _REPO
_CRITERIA_FILTERSENTRY.containing_type = _CRITERIA
_CRITERIA.fields_by_name['filters'].message_type = _CRITERIA_FILTERSENTRY
DESCRIPTOR.message_types_by_name['Runner'] = _RUNNER
DESCRIPTOR.message_types_by_name['Runners'] = _RUNNERS
DESCRIPTOR.message_types_by_name['RunnerStats'] = _RUNNERSTATS
DESCRIPTOR.message_types_by_name['Run'] = _RUN
DESCRIPTOR.message_types_by_name['Runs'] = _RUNS
DESCRIPTOR.message_types_by_name['RunStats'] = _RUNSTATS
DESCRIPTOR.message_types_by_name['Batch'] = _BATCH
DESCRIPTOR.message_types_by_name['Batchs'] = _BATCHS
DESCRIPTOR.message_types_by_name['BatchStats'] = _BATCHSTATS
DESCRIPTOR.message_types_by_name['Namespace'] = _NAMESPACE
DESCRIPTOR.message_types_by_name['Namespaces'] = _NAMESPACES
DESCRIPTOR.message_types_by_name['Repo'] = _REPO
DESCRIPTOR.message_types_by_name['Repos'] = _REPOS
DESCRIPTOR.message_types_by_name['Criteria'] = _CRITERIA

Runner = _reflection.GeneratedProtocolMessageType('Runner', (_message.Message,), dict(
  DESCRIPTOR = _RUNNER,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Runner)
  ))
_sym_db.RegisterMessage(Runner)

Runners = _reflection.GeneratedProtocolMessageType('Runners', (_message.Message,), dict(
  DESCRIPTOR = _RUNNERS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Runners)
  ))
_sym_db.RegisterMessage(Runners)

RunnerStats = _reflection.GeneratedProtocolMessageType('RunnerStats', (_message.Message,), dict(
  DESCRIPTOR = _RUNNERSTATS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.RunnerStats)
  ))
_sym_db.RegisterMessage(RunnerStats)

Run = _reflection.GeneratedProtocolMessageType('Run', (_message.Message,), dict(
  DESCRIPTOR = _RUN,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Run)
  ))
_sym_db.RegisterMessage(Run)

Runs = _reflection.GeneratedProtocolMessageType('Runs', (_message.Message,), dict(
  DESCRIPTOR = _RUNS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Runs)
  ))
_sym_db.RegisterMessage(Runs)

RunStats = _reflection.GeneratedProtocolMessageType('RunStats', (_message.Message,), dict(
  DESCRIPTOR = _RUNSTATS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.RunStats)
  ))
_sym_db.RegisterMessage(RunStats)

Batch = _reflection.GeneratedProtocolMessageType('Batch', (_message.Message,), dict(
  DESCRIPTOR = _BATCH,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Batch)
  ))
_sym_db.RegisterMessage(Batch)

Batchs = _reflection.GeneratedProtocolMessageType('Batchs', (_message.Message,), dict(
  DESCRIPTOR = _BATCHS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Batchs)
  ))
_sym_db.RegisterMessage(Batchs)

BatchStats = _reflection.GeneratedProtocolMessageType('BatchStats', (_message.Message,), dict(
  DESCRIPTOR = _BATCHSTATS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.BatchStats)
  ))
_sym_db.RegisterMessage(BatchStats)

Namespace = _reflection.GeneratedProtocolMessageType('Namespace', (_message.Message,), dict(
  DESCRIPTOR = _NAMESPACE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Namespace)
  ))
_sym_db.RegisterMessage(Namespace)

Namespaces = _reflection.GeneratedProtocolMessageType('Namespaces', (_message.Message,), dict(
  DESCRIPTOR = _NAMESPACES,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Namespaces)
  ))
_sym_db.RegisterMessage(Namespaces)

Repo = _reflection.GeneratedProtocolMessageType('Repo', (_message.Message,), dict(
  DESCRIPTOR = _REPO,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Repo)
  ))
_sym_db.RegisterMessage(Repo)

Repos = _reflection.GeneratedProtocolMessageType('Repos', (_message.Message,), dict(
  DESCRIPTOR = _REPOS,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Repos)
  ))
_sym_db.RegisterMessage(Repos)

Criteria = _reflection.GeneratedProtocolMessageType('Criteria', (_message.Message,), dict(

  FiltersEntry = _reflection.GeneratedProtocolMessageType('FiltersEntry', (_message.Message,), dict(
    DESCRIPTOR = _CRITERIA_FILTERSENTRY,
    __module__ = 'api_pb2'
    # @@protoc_insertion_point(class_scope:front_api.Criteria.FiltersEntry)
    ))
  ,
  DESCRIPTOR = _CRITERIA,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:front_api.Criteria)
  ))
_sym_db.RegisterMessage(Criteria)
_sym_db.RegisterMessage(Criteria.FiltersEntry)


_CRITERIA_FILTERSENTRY.has_options = True
_CRITERIA_FILTERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class ApiStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunnerList = channel.unary_unary(
        '/front_api.Api/RunnerList',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=Runners.FromString,
        )
    self.RunnerStat = channel.unary_unary(
        '/front_api.Api/RunnerStat',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=RunnerStats.FromString,
        )
    self.RunnerGet = channel.unary_unary(
        '/front_api.Api/RunnerGet',
        request_serializer=Runner.SerializeToString,
        response_deserializer=Runner.FromString,
        )
    self.RunnerKill = channel.unary_unary(
        '/front_api.Api/RunnerKill',
        request_serializer=Runner.SerializeToString,
        response_deserializer=Runner.FromString,
        )
    self.RunList = channel.unary_unary(
        '/front_api.Api/RunList',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=Runs.FromString,
        )
    self.RunStat = channel.unary_unary(
        '/front_api.Api/RunStat',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=RunStats.FromString,
        )
    self.RunGet = channel.unary_unary(
        '/front_api.Api/RunGet',
        request_serializer=Run.SerializeToString,
        response_deserializer=Run.FromString,
        )
    self.RunStart = channel.unary_unary(
        '/front_api.Api/RunStart',
        request_serializer=Run.SerializeToString,
        response_deserializer=Run.FromString,
        )
    self.RunCancel = channel.unary_unary(
        '/front_api.Api/RunCancel',
        request_serializer=Run.SerializeToString,
        response_deserializer=Run.FromString,
        )
    self.BatchList = channel.unary_unary(
        '/front_api.Api/BatchList',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=Batchs.FromString,
        )
    self.BatchListActive = channel.unary_unary(
        '/front_api.Api/BatchListActive',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=Batchs.FromString,
        )
    self.BatchGet = channel.unary_unary(
        '/front_api.Api/BatchGet',
        request_serializer=Batch.SerializeToString,
        response_deserializer=Batch.FromString,
        )
    self.BatchAdd = channel.unary_unary(
        '/front_api.Api/BatchAdd',
        request_serializer=Batch.SerializeToString,
        response_deserializer=Batch.FromString,
        )
    self.BatchStart = channel.unary_unary(
        '/front_api.Api/BatchStart',
        request_serializer=Batch.SerializeToString,
        response_deserializer=Runs.FromString,
        )
    self.BatchStat = channel.unary_unary(
        '/front_api.Api/BatchStat',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=BatchStats.FromString,
        )
    self.NamespaceList = channel.unary_unary(
        '/front_api.Api/NamespaceList',
        request_serializer=Criteria.SerializeToString,
        response_deserializer=Namespaces.FromString,
        )
    self.NamespaceGet = channel.unary_unary(
        '/front_api.Api/NamespaceGet',
        request_serializer=Namespace.SerializeToString,
        response_deserializer=Namespace.FromString,
        )
    self.NamespaceCreate = channel.unary_unary(
        '/front_api.Api/NamespaceCreate',
        request_serializer=Namespace.SerializeToString,
        response_deserializer=Namespace.FromString,
        )
    self.NamespaceAddRepo = channel.unary_unary(
        '/front_api.Api/NamespaceAddRepo',
        request_serializer=Namespace.SerializeToString,
        response_deserializer=Namespace.FromString,
        )


class ApiServicer(object):

  def RunnerList(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunnerStat(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunnerGet(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunnerKill(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunList(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunStat(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunGet(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunStart(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunCancel(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchList(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchListActive(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchGet(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchAdd(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchStart(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchStat(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NamespaceList(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NamespaceGet(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NamespaceCreate(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NamespaceAddRepo(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunnerList': grpc.unary_unary_rpc_method_handler(
          servicer.RunnerList,
          request_deserializer=Criteria.FromString,
          response_serializer=Runners.SerializeToString,
      ),
      'RunnerStat': grpc.unary_unary_rpc_method_handler(
          servicer.RunnerStat,
          request_deserializer=Criteria.FromString,
          response_serializer=RunnerStats.SerializeToString,
      ),
      'RunnerGet': grpc.unary_unary_rpc_method_handler(
          servicer.RunnerGet,
          request_deserializer=Runner.FromString,
          response_serializer=Runner.SerializeToString,
      ),
      'RunnerKill': grpc.unary_unary_rpc_method_handler(
          servicer.RunnerKill,
          request_deserializer=Runner.FromString,
          response_serializer=Runner.SerializeToString,
      ),
      'RunList': grpc.unary_unary_rpc_method_handler(
          servicer.RunList,
          request_deserializer=Criteria.FromString,
          response_serializer=Runs.SerializeToString,
      ),
      'RunStat': grpc.unary_unary_rpc_method_handler(
          servicer.RunStat,
          request_deserializer=Criteria.FromString,
          response_serializer=RunStats.SerializeToString,
      ),
      'RunGet': grpc.unary_unary_rpc_method_handler(
          servicer.RunGet,
          request_deserializer=Run.FromString,
          response_serializer=Run.SerializeToString,
      ),
      'RunStart': grpc.unary_unary_rpc_method_handler(
          servicer.RunStart,
          request_deserializer=Run.FromString,
          response_serializer=Run.SerializeToString,
      ),
      'RunCancel': grpc.unary_unary_rpc_method_handler(
          servicer.RunCancel,
          request_deserializer=Run.FromString,
          response_serializer=Run.SerializeToString,
      ),
      'BatchList': grpc.unary_unary_rpc_method_handler(
          servicer.BatchList,
          request_deserializer=Criteria.FromString,
          response_serializer=Batchs.SerializeToString,
      ),
      'BatchListActive': grpc.unary_unary_rpc_method_handler(
          servicer.BatchListActive,
          request_deserializer=Criteria.FromString,
          response_serializer=Batchs.SerializeToString,
      ),
      'BatchGet': grpc.unary_unary_rpc_method_handler(
          servicer.BatchGet,
          request_deserializer=Batch.FromString,
          response_serializer=Batch.SerializeToString,
      ),
      'BatchAdd': grpc.unary_unary_rpc_method_handler(
          servicer.BatchAdd,
          request_deserializer=Batch.FromString,
          response_serializer=Batch.SerializeToString,
      ),
      'BatchStart': grpc.unary_unary_rpc_method_handler(
          servicer.BatchStart,
          request_deserializer=Batch.FromString,
          response_serializer=Runs.SerializeToString,
      ),
      'BatchStat': grpc.unary_unary_rpc_method_handler(
          servicer.BatchStat,
          request_deserializer=Criteria.FromString,
          response_serializer=BatchStats.SerializeToString,
      ),
      'NamespaceList': grpc.unary_unary_rpc_method_handler(
          servicer.NamespaceList,
          request_deserializer=Criteria.FromString,
          response_serializer=Namespaces.SerializeToString,
      ),
      'NamespaceGet': grpc.unary_unary_rpc_method_handler(
          servicer.NamespaceGet,
          request_deserializer=Namespace.FromString,
          response_serializer=Namespace.SerializeToString,
      ),
      'NamespaceCreate': grpc.unary_unary_rpc_method_handler(
          servicer.NamespaceCreate,
          request_deserializer=Namespace.FromString,
          response_serializer=Namespace.SerializeToString,
      ),
      'NamespaceAddRepo': grpc.unary_unary_rpc_method_handler(
          servicer.NamespaceAddRepo,
          request_deserializer=Namespace.FromString,
          response_serializer=Namespace.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'front_api.Api', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaApiServicer(object):
  def RunnerList(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunnerStat(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunnerGet(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunnerKill(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunList(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunStat(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunGet(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunStart(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RunCancel(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchList(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchListActive(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchGet(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchAdd(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchStart(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def BatchStat(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def NamespaceList(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def NamespaceGet(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def NamespaceCreate(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def NamespaceAddRepo(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaApiStub(object):
  def RunnerList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunnerList.future = None
  def RunnerStat(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunnerStat.future = None
  def RunnerGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunnerGet.future = None
  def RunnerKill(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunnerKill.future = None
  def RunList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunList.future = None
  def RunStat(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunStat.future = None
  def RunGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunGet.future = None
  def RunStart(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunStart.future = None
  def RunCancel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RunCancel.future = None
  def BatchList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchList.future = None
  def BatchListActive(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchListActive.future = None
  def BatchGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchGet.future = None
  def BatchAdd(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchAdd.future = None
  def BatchStart(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchStart.future = None
  def BatchStat(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  BatchStat.future = None
  def NamespaceList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  NamespaceList.future = None
  def NamespaceGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  NamespaceGet.future = None
  def NamespaceCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  NamespaceCreate.future = None
  def NamespaceAddRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  NamespaceAddRepo.future = None


def beta_create_Api_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('front_api.Api', 'BatchAdd'): Batch.FromString,
    ('front_api.Api', 'BatchGet'): Batch.FromString,
    ('front_api.Api', 'BatchList'): Criteria.FromString,
    ('front_api.Api', 'BatchListActive'): Criteria.FromString,
    ('front_api.Api', 'BatchStart'): Batch.FromString,
    ('front_api.Api', 'BatchStat'): Criteria.FromString,
    ('front_api.Api', 'NamespaceAddRepo'): Namespace.FromString,
    ('front_api.Api', 'NamespaceCreate'): Namespace.FromString,
    ('front_api.Api', 'NamespaceGet'): Namespace.FromString,
    ('front_api.Api', 'NamespaceList'): Criteria.FromString,
    ('front_api.Api', 'RunCancel'): Run.FromString,
    ('front_api.Api', 'RunGet'): Run.FromString,
    ('front_api.Api', 'RunList'): Criteria.FromString,
    ('front_api.Api', 'RunStart'): Run.FromString,
    ('front_api.Api', 'RunStat'): Criteria.FromString,
    ('front_api.Api', 'RunnerGet'): Runner.FromString,
    ('front_api.Api', 'RunnerKill'): Runner.FromString,
    ('front_api.Api', 'RunnerList'): Criteria.FromString,
    ('front_api.Api', 'RunnerStat'): Criteria.FromString,
  }
  response_serializers = {
    ('front_api.Api', 'BatchAdd'): Batch.SerializeToString,
    ('front_api.Api', 'BatchGet'): Batch.SerializeToString,
    ('front_api.Api', 'BatchList'): Batchs.SerializeToString,
    ('front_api.Api', 'BatchListActive'): Batchs.SerializeToString,
    ('front_api.Api', 'BatchStart'): Runs.SerializeToString,
    ('front_api.Api', 'BatchStat'): BatchStats.SerializeToString,
    ('front_api.Api', 'NamespaceAddRepo'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceCreate'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceGet'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceList'): Namespaces.SerializeToString,
    ('front_api.Api', 'RunCancel'): Run.SerializeToString,
    ('front_api.Api', 'RunGet'): Run.SerializeToString,
    ('front_api.Api', 'RunList'): Runs.SerializeToString,
    ('front_api.Api', 'RunStart'): Run.SerializeToString,
    ('front_api.Api', 'RunStat'): RunStats.SerializeToString,
    ('front_api.Api', 'RunnerGet'): Runner.SerializeToString,
    ('front_api.Api', 'RunnerKill'): Runner.SerializeToString,
    ('front_api.Api', 'RunnerList'): Runners.SerializeToString,
    ('front_api.Api', 'RunnerStat'): RunnerStats.SerializeToString,
  }
  method_implementations = {
    ('front_api.Api', 'BatchAdd'): face_utilities.unary_unary_inline(servicer.BatchAdd),
    ('front_api.Api', 'BatchGet'): face_utilities.unary_unary_inline(servicer.BatchGet),
    ('front_api.Api', 'BatchList'): face_utilities.unary_unary_inline(servicer.BatchList),
    ('front_api.Api', 'BatchListActive'): face_utilities.unary_unary_inline(servicer.BatchListActive),
    ('front_api.Api', 'BatchStart'): face_utilities.unary_unary_inline(servicer.BatchStart),
    ('front_api.Api', 'BatchStat'): face_utilities.unary_unary_inline(servicer.BatchStat),
    ('front_api.Api', 'NamespaceAddRepo'): face_utilities.unary_unary_inline(servicer.NamespaceAddRepo),
    ('front_api.Api', 'NamespaceCreate'): face_utilities.unary_unary_inline(servicer.NamespaceCreate),
    ('front_api.Api', 'NamespaceGet'): face_utilities.unary_unary_inline(servicer.NamespaceGet),
    ('front_api.Api', 'NamespaceList'): face_utilities.unary_unary_inline(servicer.NamespaceList),
    ('front_api.Api', 'RunCancel'): face_utilities.unary_unary_inline(servicer.RunCancel),
    ('front_api.Api', 'RunGet'): face_utilities.unary_unary_inline(servicer.RunGet),
    ('front_api.Api', 'RunList'): face_utilities.unary_unary_inline(servicer.RunList),
    ('front_api.Api', 'RunStart'): face_utilities.unary_unary_inline(servicer.RunStart),
    ('front_api.Api', 'RunStat'): face_utilities.unary_unary_inline(servicer.RunStat),
    ('front_api.Api', 'RunnerGet'): face_utilities.unary_unary_inline(servicer.RunnerGet),
    ('front_api.Api', 'RunnerKill'): face_utilities.unary_unary_inline(servicer.RunnerKill),
    ('front_api.Api', 'RunnerList'): face_utilities.unary_unary_inline(servicer.RunnerList),
    ('front_api.Api', 'RunnerStat'): face_utilities.unary_unary_inline(servicer.RunnerStat),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Api_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('front_api.Api', 'BatchAdd'): Batch.SerializeToString,
    ('front_api.Api', 'BatchGet'): Batch.SerializeToString,
    ('front_api.Api', 'BatchList'): Criteria.SerializeToString,
    ('front_api.Api', 'BatchListActive'): Criteria.SerializeToString,
    ('front_api.Api', 'BatchStart'): Batch.SerializeToString,
    ('front_api.Api', 'BatchStat'): Criteria.SerializeToString,
    ('front_api.Api', 'NamespaceAddRepo'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceCreate'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceGet'): Namespace.SerializeToString,
    ('front_api.Api', 'NamespaceList'): Criteria.SerializeToString,
    ('front_api.Api', 'RunCancel'): Run.SerializeToString,
    ('front_api.Api', 'RunGet'): Run.SerializeToString,
    ('front_api.Api', 'RunList'): Criteria.SerializeToString,
    ('front_api.Api', 'RunStart'): Run.SerializeToString,
    ('front_api.Api', 'RunStat'): Criteria.SerializeToString,
    ('front_api.Api', 'RunnerGet'): Runner.SerializeToString,
    ('front_api.Api', 'RunnerKill'): Runner.SerializeToString,
    ('front_api.Api', 'RunnerList'): Criteria.SerializeToString,
    ('front_api.Api', 'RunnerStat'): Criteria.SerializeToString,
  }
  response_deserializers = {
    ('front_api.Api', 'BatchAdd'): Batch.FromString,
    ('front_api.Api', 'BatchGet'): Batch.FromString,
    ('front_api.Api', 'BatchList'): Batchs.FromString,
    ('front_api.Api', 'BatchListActive'): Batchs.FromString,
    ('front_api.Api', 'BatchStart'): Runs.FromString,
    ('front_api.Api', 'BatchStat'): BatchStats.FromString,
    ('front_api.Api', 'NamespaceAddRepo'): Namespace.FromString,
    ('front_api.Api', 'NamespaceCreate'): Namespace.FromString,
    ('front_api.Api', 'NamespaceGet'): Namespace.FromString,
    ('front_api.Api', 'NamespaceList'): Namespaces.FromString,
    ('front_api.Api', 'RunCancel'): Run.FromString,
    ('front_api.Api', 'RunGet'): Run.FromString,
    ('front_api.Api', 'RunList'): Runs.FromString,
    ('front_api.Api', 'RunStart'): Run.FromString,
    ('front_api.Api', 'RunStat'): RunStats.FromString,
    ('front_api.Api', 'RunnerGet'): Runner.FromString,
    ('front_api.Api', 'RunnerKill'): Runner.FromString,
    ('front_api.Api', 'RunnerList'): Runners.FromString,
    ('front_api.Api', 'RunnerStat'): RunnerStats.FromString,
  }
  cardinalities = {
    'BatchAdd': cardinality.Cardinality.UNARY_UNARY,
    'BatchGet': cardinality.Cardinality.UNARY_UNARY,
    'BatchList': cardinality.Cardinality.UNARY_UNARY,
    'BatchListActive': cardinality.Cardinality.UNARY_UNARY,
    'BatchStart': cardinality.Cardinality.UNARY_UNARY,
    'BatchStat': cardinality.Cardinality.UNARY_UNARY,
    'NamespaceAddRepo': cardinality.Cardinality.UNARY_UNARY,
    'NamespaceCreate': cardinality.Cardinality.UNARY_UNARY,
    'NamespaceGet': cardinality.Cardinality.UNARY_UNARY,
    'NamespaceList': cardinality.Cardinality.UNARY_UNARY,
    'RunCancel': cardinality.Cardinality.UNARY_UNARY,
    'RunGet': cardinality.Cardinality.UNARY_UNARY,
    'RunList': cardinality.Cardinality.UNARY_UNARY,
    'RunStart': cardinality.Cardinality.UNARY_UNARY,
    'RunStat': cardinality.Cardinality.UNARY_UNARY,
    'RunnerGet': cardinality.Cardinality.UNARY_UNARY,
    'RunnerKill': cardinality.Cardinality.UNARY_UNARY,
    'RunnerList': cardinality.Cardinality.UNARY_UNARY,
    'RunnerStat': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'front_api.Api', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
